.program:
ji   i4
noop
DATA_SECTION_OFFSET[0..32]
DATA_SECTION_OFFSET[32..64]
lw   $ds $is 1
add  $$ds $$ds $is
lw   $r0 data_0               ; literal instantiation
lw   $r0 data_1               ; literal instantiation
lw   $r0 data_2               ; literal instantiation
lw   $r1 $fp i73              ; load input function selector
lw   $r0 data_8               ; load fn selector for comparison
eq   $r0 $r1 $r0              ; function selector comparison
jnei $zero $r0 i16            ; jump to selected function
rvrt $zero                    ; revert if no selectors matched
lw   $r3 $fp i74              ; loading argument into abi function
lw   $r2 data_3               ; literal instantiation
move $r0 $r2
lw   $r1 data_4               ; literal instantiation
move $r0 $r0
move $r1 $r1
lt   $r0 $r0 $r1
move $r0 $r0                  ; return value from inline asm
jnei $r0 $one i41
lw   $r1 data_5               ; literal instantiation
lw   $r0 data_5               ; literal instantiation
move $r1 $r1
move $r0 $r0
eq   $r0 $r1 $r0
move $r0 $r0                  ; return value from inline asm
jnei $r0 $one i33
lw   $r0 data_6               ; literal instantiation
move $r1 $r2
lw   $r0 data_7               ; literal instantiation
move $r1 $r1
move $r0 $r0
add  $r0 $r0 $r1
move $r0 $r0                  ; return value from inline asm
move $r2 $r0                  ; variable index reassignment
ji   i18
move $r0 $r3
ret  $r0                      ; withdraw fn return value
.data:
data_0 .b256 0x0000000000000000000000000000000000000000000000000000000000000000
data_1 .u64 0x3b9aca00
data_2 .b256 0x0000000000000000000000000000000000000000000000000000000000000001
data_3 .u64 0x00
data_4 .u64 0x04
data_5 .bool 0x01
data_6 .u64 0x05
data_7 .u64 0x01
data_8 .u32 0x9a25a780

  Bytecode size is 308 bytes.
